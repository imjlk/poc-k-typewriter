{"version":3,"file":"view.js","mappings":"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","sources":["webpack://k-typewriter/./src/Typewriter.tsx","webpack://k-typewriter/./src/useUniTyper.ts","webpack://k-typewriter/external window \"React\"","webpack://k-typewriter/external window \"ReactDOM\"","webpack://k-typewriter/./node_modules/.pnpm/@beavercoding+uni-typer@1.0.1/node_modules/@beavercoding/uni-typer/dist/index.mjs","webpack://k-typewriter/webpack/bootstrap","webpack://k-typewriter/webpack/runtime/compat get default export","webpack://k-typewriter/webpack/runtime/define property getters","webpack://k-typewriter/webpack/runtime/hasOwnProperty shorthand","webpack://k-typewriter/webpack/runtime/make namespace object","webpack://k-typewriter/./src/view.tsx"],"sourcesContent":["import useUniTyper, { UseUniTyperProps } from \"./useUniTyper\";\n\nfunction TypeWriter(props: UseUniTyperProps) {\n\tconst [displayedText, state,] = useUniTyper(props);\n\n\treturn (\n\t\t<>\n\t\t\t<p>{displayedText}</p>\n\t\t</>\n\t);\n}\n\nexport default TypeWriter;","import React from \"react\";\nimport { decompose, combine } from \"@beavercoding/uni-typer\";\n\ntype FullDecomposed = ReturnType<typeof decompose>[number];\n\nexport type UseUniTyperProps = {\n  texts: string[];\n  typeDelay?: number;\n  deleteDelay?: number;\n  pauseDelay?: number;\n};\n\ntype UseTypeWriterState = {\n  /** 편의상 넣는 text */\n  disassembledText: FullDecomposed[];\n  flatIndex: number;\n  isForwarding: boolean;\n};\n\nconst initialTypeWriterState: UseTypeWriterState = {\n  disassembledText: [],\n  flatIndex: 0,\n  isForwarding: true,\n};\n\nfunction updateStateForwarding(prev: UseTypeWriterState) {\n  const { disassembledText, flatIndex } = prev;\n  const nextFlatIndex = flatIndex + 1;\n  const nextIsForwarding = nextFlatIndex < disassembledText.length;\n  return {\n    ...prev,\n    flatIndex: nextFlatIndex,\n    isForwarding: nextIsForwarding,\n  };\n}\n\nfunction updateStateBackwarding(prev: UseTypeWriterState) {\n  const { flatIndex } = prev;\n  const nextFlatIndex = flatIndex - 1;\n  const nextIsForwarding = nextFlatIndex > 0;\n  return {\n    ...prev,\n    flatIndex: Math.max(nextFlatIndex, 0),\n    isForwarding: nextIsForwarding,\n  };\n}\n\nexport default function useUniTyper(props: UseUniTyperProps) {\n  const { texts, pauseDelay = 1000, typeDelay = 100, deleteDelay = 10 } = props;\n\n  const [textIndex, setTextIndex] = React.useState({\n    index: 0,\n    max: texts.length,\n  });\n\n  const text = React.useMemo(\n    () => texts[textIndex.index],\n    [textIndex.index, texts]\n  );\n\n  const disassembledText = textIndex.max === 1 ? decompose(text) : React.useMemo(() => {\n    return decompose(text);\n  }, [text]);\n\n  // console.log(textIndex.index, texts[textIndex.index]);\n\n  const [state, setState] = React.useState<UseTypeWriterState>(() => ({\n    ...initialTypeWriterState,\n    disassembledText,\n  }));\n\n  const delay = React.useMemo(() => {\n    const fullFlatLength = disassembledText.flat().length;\n    const nextIndex = state.flatIndex + 1;\n    const isLastCharacter = nextIndex === fullFlatLength + 1;\n    const prevIndex = state.flatIndex - 1;\n    const isFirstCharacter = prevIndex === -1;\n\n    const nextIsForwarding =\n      isFirstCharacter ||\n      (state.isForwarding && !isFirstCharacter && !isLastCharacter);\n\n    if (isLastCharacter || isFirstCharacter) {\n      return pauseDelay;\n    }\n\n    if (nextIsForwarding) {\n      return typeDelay;\n    }\n\n    return deleteDelay;\n  }, [\n    disassembledText,\n    state.flatIndex,\n    state.isForwarding,\n    deleteDelay,\n    pauseDelay,\n    typeDelay,\n  ]);\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      setState((prev) => {\n        const fullFlatLength = disassembledText.flat().length;\n        const nextIndex = prev.flatIndex + 1;\n        const isLastCharacter = nextIndex === fullFlatLength + 1;\n        const prevIndex = prev.flatIndex - 1;\n        const isFirstCharacter = prevIndex === -1;\n\n        const next = prev.isForwarding\n          ? updateStateForwarding(prev)\n          : updateStateBackwarding(prev);\n\n        const nextIsForwarding =\n          isFirstCharacter ||\n          (prev.isForwarding && !isFirstCharacter && !isLastCharacter);\n\n        // console.log({nextIndex, fullFlatLength, nextIsForwarding, prevIndex});\n\n        if (!prev.isForwarding && nextIsForwarding) {\n          setTextIndex((prev) => ({\n            ...prev,\n            index: (prev.index + 1) % prev.max,\n          }));\n        }\n\n        return {\n          ...next,\n          isForwarding: nextIsForwarding,\n        };\n      });\n    }, delay);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [disassembledText, state.flatIndex, delay]);\n\n  const displayedText = React.useMemo(\n    () =>\n      combine(\n        disassembledText\n          .slice(0, state.flatIndex)\n          .map((v) => v.decomposedAtIndex)\n      ),\n    [disassembledText, state]\n  );\n\n  return [displayedText, state] as const;\n}","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","// http://unicode.org/Public/UNIDATA/Blocks.txt\nconst UNICODE_BLOCKS = [\n    [\n        0x0000,\n        0x007f,\n        \"Basic Latin\"\n    ],\n    [\n        0x0080,\n        0x00ff,\n        \"Latin-1 Supplement\"\n    ],\n    [\n        0x0100,\n        0x017f,\n        \"Latin Extended-A\"\n    ],\n    [\n        0x0180,\n        0x024f,\n        \"Latin Extended-B\"\n    ],\n    [\n        0x0250,\n        0x02af,\n        \"IPA Extensions\"\n    ],\n    [\n        0x02b0,\n        0x02ff,\n        \"Spacing Modifier Letters\"\n    ],\n    [\n        0x0300,\n        0x036f,\n        \"Combining Diacritical Marks\"\n    ],\n    [\n        0x0370,\n        0x03ff,\n        \"Greek and Coptic\"\n    ],\n    [\n        0x0400,\n        0x04ff,\n        \"Cyrillic\"\n    ],\n    [\n        0x0500,\n        0x052f,\n        \"Cyrillic Supplement\"\n    ],\n    [\n        0x0530,\n        0x058f,\n        \"Armenian\"\n    ],\n    [\n        0x0590,\n        0x05ff,\n        \"Hebrew\"\n    ],\n    [\n        0x0600,\n        0x06ff,\n        \"Arabic\"\n    ],\n    [\n        0x0700,\n        0x074f,\n        \"Syriac\"\n    ],\n    [\n        0x0750,\n        0x077f,\n        \"Arabic Supplement\"\n    ],\n    [\n        0x0780,\n        0x07bf,\n        \"Thaana\"\n    ],\n    [\n        0x07c0,\n        0x07ff,\n        \"NKo\"\n    ],\n    [\n        0x0800,\n        0x083f,\n        \"Samaritan\"\n    ],\n    [\n        0x0840,\n        0x085f,\n        \"Mandaic\"\n    ],\n    [\n        0x0860,\n        0x086f,\n        \"Syriac Supplement\"\n    ],\n    [\n        0x0870,\n        0x089f,\n        \"Arabic Extended-B\"\n    ],\n    [\n        0x08a0,\n        0x08ff,\n        \"Arabic Extended-A\"\n    ],\n    [\n        0x0900,\n        0x097f,\n        \"Devanagari\"\n    ],\n    [\n        0x0980,\n        0x09ff,\n        \"Bengali\"\n    ],\n    [\n        0x0a00,\n        0x0a7f,\n        \"Gurmukhi\"\n    ],\n    [\n        0x0a80,\n        0x0aff,\n        \"Gujarati\"\n    ],\n    [\n        0x0b00,\n        0x0b7f,\n        \"Oriya\"\n    ],\n    [\n        0x0b80,\n        0x0bff,\n        \"Tamil\"\n    ],\n    [\n        0x0c00,\n        0x0c7f,\n        \"Telugu\"\n    ],\n    [\n        0x0c80,\n        0x0cff,\n        \"Kannada\"\n    ],\n    [\n        0x0d00,\n        0x0d7f,\n        \"Malayalam\"\n    ],\n    [\n        0x0d80,\n        0x0dff,\n        \"Sinhala\"\n    ],\n    [\n        0x0e00,\n        0x0e7f,\n        \"Thai\"\n    ],\n    [\n        0x0e80,\n        0x0eff,\n        \"Lao\"\n    ],\n    [\n        0x0f00,\n        0x0fff,\n        \"Tibetan\"\n    ],\n    [\n        0x1000,\n        0x109f,\n        \"Myanmar\"\n    ],\n    [\n        0x10a0,\n        0x10ff,\n        \"Georgian\"\n    ],\n    [\n        0x1100,\n        0x11ff,\n        \"Hangul Jamo\"\n    ],\n    [\n        0x1200,\n        0x137f,\n        \"Ethiopic\"\n    ],\n    [\n        0x1380,\n        0x139f,\n        \"Ethiopic Supplement\"\n    ],\n    [\n        0x13a0,\n        0x13ff,\n        \"Cherokee\"\n    ],\n    [\n        0x1400,\n        0x167f,\n        \"Unified Canadian Aboriginal Syllabics\"\n    ],\n    [\n        0x1680,\n        0x169f,\n        \"Ogham\"\n    ],\n    [\n        0x16a0,\n        0x16ff,\n        \"Runic\"\n    ],\n    [\n        0x1700,\n        0x171f,\n        \"Tagalog\"\n    ],\n    [\n        0x1720,\n        0x173f,\n        \"Hanunoo\"\n    ],\n    [\n        0x1740,\n        0x175f,\n        \"Buhid\"\n    ],\n    [\n        0x1760,\n        0x177f,\n        \"Tagbanwa\"\n    ],\n    [\n        0x1780,\n        0x17ff,\n        \"Khmer\"\n    ],\n    [\n        0x1800,\n        0x18af,\n        \"Mongolian\"\n    ],\n    [\n        0x18b0,\n        0x18ff,\n        \"Unified Canadian Aboriginal Syllabics Extended\"\n    ],\n    [\n        0x1900,\n        0x194f,\n        \"Limbu\"\n    ],\n    [\n        0x1950,\n        0x197f,\n        \"Tai Le\"\n    ],\n    [\n        0x1980,\n        0x19df,\n        \"New Tai Lue\"\n    ],\n    [\n        0x19e0,\n        0x19ff,\n        \"Khmer Symbols\"\n    ],\n    [\n        0x1a00,\n        0x1a1f,\n        \"Buginese\"\n    ],\n    [\n        0x1a20,\n        0x1aaf,\n        \"Tai Tham\"\n    ],\n    [\n        0x1ab0,\n        0x1aff,\n        \"Combining Diacritical Marks Extended\"\n    ],\n    [\n        0x1b00,\n        0x1b7f,\n        \"Balinese\"\n    ],\n    [\n        0x1b80,\n        0x1bbf,\n        \"Sundanese\"\n    ],\n    [\n        0x1bc0,\n        0x1bff,\n        \"Batak\"\n    ],\n    [\n        0x1c00,\n        0x1c4f,\n        \"Lepcha\"\n    ],\n    [\n        0x1c50,\n        0x1c7f,\n        \"Ol Chiki\"\n    ],\n    [\n        0x1c80,\n        0x1c8f,\n        \"Cyrillic Extended-C\"\n    ],\n    [\n        0x1c90,\n        0x1cbf,\n        \"Georgian Extended\"\n    ],\n    [\n        0x1cc0,\n        0x1ccf,\n        \"Sundanese Supplement\"\n    ],\n    [\n        0x1cd0,\n        0x1cff,\n        \"Vedic Extensions\"\n    ],\n    [\n        0x1d00,\n        0x1d7f,\n        \"Phonetic Extensions\"\n    ],\n    [\n        0x1d80,\n        0x1dbf,\n        \"Phonetic Extensions Supplement\"\n    ],\n    [\n        0x1dc0,\n        0x1dff,\n        \"Combining Diacritical Marks Supplement\"\n    ],\n    [\n        0x1e00,\n        0x1eff,\n        \"Latin Extended Additional\"\n    ],\n    [\n        0x1f00,\n        0x1fff,\n        \"Greek Extended\"\n    ],\n    [\n        0x2000,\n        0x206f,\n        \"General Punctuation\"\n    ],\n    [\n        0x2070,\n        0x209f,\n        \"Superscripts and Subscripts\"\n    ],\n    [\n        0x20a0,\n        0x20cf,\n        \"Currency Symbols\"\n    ],\n    [\n        0x20d0,\n        0x20ff,\n        \"Combining Diacritical Marks for Symbols\"\n    ],\n    [\n        0x2100,\n        0x214f,\n        \"Letterlike Symbols\"\n    ],\n    [\n        0x2150,\n        0x218f,\n        \"Number Forms\"\n    ],\n    [\n        0x2190,\n        0x21ff,\n        \"Arrows\"\n    ],\n    [\n        0x2200,\n        0x22ff,\n        \"Mathematical Operators\"\n    ],\n    [\n        0x2300,\n        0x23ff,\n        \"Miscellaneous Technical\"\n    ],\n    [\n        0x2400,\n        0x243f,\n        \"Control Pictures\"\n    ],\n    [\n        0x2440,\n        0x245f,\n        \"Optical Character Recognition\"\n    ],\n    [\n        0x2460,\n        0x24ff,\n        \"Enclosed Alphanumerics\"\n    ],\n    [\n        0x2500,\n        0x257f,\n        \"Box Drawing\"\n    ],\n    [\n        0x2580,\n        0x259f,\n        \"Block Elements\"\n    ],\n    [\n        0x25a0,\n        0x25ff,\n        \"Geometric Shapes\"\n    ],\n    [\n        0x2600,\n        0x26ff,\n        \"Miscellaneous Symbols\"\n    ],\n    [\n        0x2700,\n        0x27bf,\n        \"Dingbats\"\n    ],\n    [\n        0x27c0,\n        0x27ef,\n        \"Miscellaneous Mathematical Symbols-A\"\n    ],\n    [\n        0x27f0,\n        0x27ff,\n        \"Supplemental Arrows-A\"\n    ],\n    [\n        0x2800,\n        0x28ff,\n        \"Braille Patterns\"\n    ],\n    [\n        0x2900,\n        0x297f,\n        \"Supplemental Arrows-B\"\n    ],\n    [\n        0x2980,\n        0x29ff,\n        \"Miscellaneous Mathematical Symbols-B\"\n    ],\n    [\n        0x2a00,\n        0x2aff,\n        \"Supplemental Mathematical Operators\"\n    ],\n    [\n        0x2b00,\n        0x2bff,\n        \"Miscellaneous Symbols and Arrows\"\n    ],\n    [\n        0x2c00,\n        0x2c5f,\n        \"Glagolitic\"\n    ],\n    [\n        0x2c60,\n        0x2c7f,\n        \"Latin Extended-C\"\n    ],\n    [\n        0x2c80,\n        0x2cff,\n        \"Coptic\"\n    ],\n    [\n        0x2d00,\n        0x2d2f,\n        \"Georgian Supplement\"\n    ],\n    [\n        0x2d30,\n        0x2d7f,\n        \"Tifinagh\"\n    ],\n    [\n        0x2d80,\n        0x2ddf,\n        \"Ethiopic Extended\"\n    ],\n    [\n        0x2de0,\n        0x2dff,\n        \"Cyrillic Extended-A\"\n    ],\n    [\n        0x2e00,\n        0x2e7f,\n        \"Supplemental Punctuation\"\n    ],\n    [\n        0x2e80,\n        0x2eff,\n        \"CJK Radicals Supplement\"\n    ],\n    [\n        0x2f00,\n        0x2fdf,\n        \"Kangxi Radicals\"\n    ],\n    [\n        0x2ff0,\n        0x2fff,\n        \"Ideographic Description Characters\"\n    ],\n    [\n        0x3000,\n        0x303f,\n        \"CJK Symbols and Punctuation\"\n    ],\n    [\n        0x3040,\n        0x309f,\n        \"Hiragana\"\n    ],\n    [\n        0x30a0,\n        0x30ff,\n        \"Katakana\"\n    ],\n    [\n        0x3100,\n        0x312f,\n        \"Bopomofo\"\n    ],\n    [\n        0x3130,\n        0x318f,\n        \"Hangul Compatibility Jamo\"\n    ],\n    [\n        0x3190,\n        0x319f,\n        \"Kanbun\"\n    ],\n    [\n        0x31a0,\n        0x31bf,\n        \"Bopomofo Extended\"\n    ],\n    [\n        0x31c0,\n        0x31ef,\n        \"CJK Strokes\"\n    ],\n    [\n        0x31f0,\n        0x31ff,\n        \"Katakana Phonetic Extensions\"\n    ],\n    [\n        0x3200,\n        0x32ff,\n        \"Enclosed CJK Letters and Months\"\n    ],\n    [\n        0x3300,\n        0x33ff,\n        \"CJK Compatibility\"\n    ],\n    [\n        0x3400,\n        0x4dbf,\n        \"CJK Unified Ideographs Extension A\"\n    ],\n    [\n        0x4dc0,\n        0x4dff,\n        \"Yijing Hexagram Symbols\"\n    ],\n    [\n        0x4e00,\n        0x9fff,\n        \"CJK Unified Ideographs\"\n    ],\n    [\n        0xa000,\n        0xa48f,\n        \"Yi Syllables\"\n    ],\n    [\n        0xa490,\n        0xa4cf,\n        \"Yi Radicals\"\n    ],\n    [\n        0xa4d0,\n        0xa4ff,\n        \"Lisu\"\n    ],\n    [\n        0xa500,\n        0xa63f,\n        \"Vai\"\n    ],\n    [\n        0xa640,\n        0xa69f,\n        \"Cyrillic Extended-B\"\n    ],\n    [\n        0xa6a0,\n        0xa6ff,\n        \"Bamum\"\n    ],\n    [\n        0xa700,\n        0xa71f,\n        \"Modifier Tone Letters\"\n    ],\n    [\n        0xa720,\n        0xa7ff,\n        \"Latin Extended-D\"\n    ],\n    [\n        0xa800,\n        0xa82f,\n        \"Syloti Nagri\"\n    ],\n    [\n        0xa830,\n        0xa83f,\n        \"Common Indic Number Forms\"\n    ],\n    [\n        0xa840,\n        0xa87f,\n        \"Phags-pa\"\n    ],\n    [\n        0xa880,\n        0xa8df,\n        \"Saurashtra\"\n    ],\n    [\n        0xa8e0,\n        0xa8ff,\n        \"Devanagari Extended\"\n    ],\n    [\n        0xa900,\n        0xa92f,\n        \"Kayah Li\"\n    ],\n    [\n        0xa930,\n        0xa95f,\n        \"Rejang\"\n    ],\n    [\n        0xa960,\n        0xa97f,\n        \"Hangul Jamo Extended-A\"\n    ],\n    [\n        0xa980,\n        0xa9df,\n        \"Javanese\"\n    ],\n    [\n        0xa9e0,\n        0xa9ff,\n        \"Myanmar Extended-B\"\n    ],\n    [\n        0xaa00,\n        0xaa5f,\n        \"Cham\"\n    ],\n    [\n        0xaa60,\n        0xaa7f,\n        \"Myanmar Extended-A\"\n    ],\n    [\n        0xaa80,\n        0xaadf,\n        \"Tai Viet\"\n    ],\n    [\n        0xaae0,\n        0xaaff,\n        \"Meetei Mayek Extensions\"\n    ],\n    [\n        0xab00,\n        0xab2f,\n        \"Ethiopic Extended-A\"\n    ],\n    [\n        0xab30,\n        0xab6f,\n        \"Latin Extended-E\"\n    ],\n    [\n        0xab70,\n        0xabbf,\n        \"Cherokee Supplement\"\n    ],\n    [\n        0xabc0,\n        0xabff,\n        \"Meetei Mayek\"\n    ],\n    [\n        0xac00,\n        0xd7af,\n        \"Hangul Syllables\"\n    ],\n    [\n        0xd7b0,\n        0xd7ff,\n        \"Hangul Jamo Extended-B\"\n    ],\n    [\n        0xd800,\n        0xdb7f,\n        \"High Surrogates\"\n    ],\n    [\n        0xdb80,\n        0xdbff,\n        \"High Private Use Surrogates\"\n    ],\n    [\n        0xdc00,\n        0xdfff,\n        \"Low Surrogates\"\n    ],\n    [\n        0xe000,\n        0xf8ff,\n        \"Private Use Area\"\n    ],\n    [\n        0xf900,\n        0xfaff,\n        \"CJK Compatibility Ideographs\"\n    ],\n    [\n        0xfb00,\n        0xfb4f,\n        \"Alphabetic Presentation Forms\"\n    ],\n    [\n        0xfb50,\n        0xfdff,\n        \"Arabic Presentation Forms-A\"\n    ],\n    [\n        0xfe00,\n        0xfe0f,\n        \"Variation Selectors\"\n    ],\n    [\n        0xfe10,\n        0xfe1f,\n        \"Vertical Forms\"\n    ],\n    [\n        0xfe20,\n        0xfe2f,\n        \"Combining Half Marks\"\n    ],\n    [\n        0xfe30,\n        0xfe4f,\n        \"CJK Compatibility Forms\"\n    ],\n    [\n        0xfe50,\n        0xfe6f,\n        \"Small Form Variants\"\n    ],\n    [\n        0xfe70,\n        0xfeff,\n        \"Arabic Presentation Forms-B\"\n    ],\n    [\n        0xff00,\n        0xffef,\n        \"Halfwidth and Fullwidth Forms\"\n    ],\n    [\n        0xfff0,\n        0xffff,\n        \"Specials\"\n    ],\n    [\n        0x10000,\n        0x1007f,\n        \"Linear B Syllabary\"\n    ],\n    [\n        0x10080,\n        0x100ff,\n        \"Linear B Ideograms\"\n    ],\n    [\n        0x10100,\n        0x1013f,\n        \"Aegean Numbers\"\n    ],\n    [\n        0x10140,\n        0x1018f,\n        \"Ancient Greek Numbers\"\n    ],\n    [\n        0x10190,\n        0x101cf,\n        \"Ancient Symbols\"\n    ],\n    [\n        0x101d0,\n        0x101ff,\n        \"Phaistos Disc\"\n    ],\n    [\n        0x10280,\n        0x1029f,\n        \"Lycian\"\n    ],\n    [\n        0x102a0,\n        0x102df,\n        \"Carian\"\n    ],\n    [\n        0x102e0,\n        0x102ff,\n        \"Coptic Epact Numbers\"\n    ],\n    [\n        0x10300,\n        0x1032f,\n        \"Old Italic\"\n    ],\n    [\n        0x10330,\n        0x1034f,\n        \"Gothic\"\n    ],\n    [\n        0x10350,\n        0x1037f,\n        \"Old Permic\"\n    ],\n    [\n        0x10380,\n        0x1039f,\n        \"Ugaritic\"\n    ],\n    [\n        0x103a0,\n        0x103df,\n        \"Old Persian\"\n    ],\n    [\n        0x10400,\n        0x1044f,\n        \"Deseret\"\n    ],\n    [\n        0x10450,\n        0x1047f,\n        \"Shavian\"\n    ],\n    [\n        0x10480,\n        0x104af,\n        \"Osmanya\"\n    ],\n    [\n        0x104b0,\n        0x104ff,\n        \"Osage\"\n    ],\n    [\n        0x10500,\n        0x1052f,\n        \"Elbasan\"\n    ],\n    [\n        0x10530,\n        0x1056f,\n        \"Caucasian Albanian\"\n    ],\n    [\n        0x10570,\n        0x105bf,\n        \"Vithkuqi\"\n    ],\n    [\n        0x10600,\n        0x1077f,\n        \"Linear A\"\n    ],\n    [\n        0x10780,\n        0x107bf,\n        \"Latin Extended-F\"\n    ],\n    [\n        0x10800,\n        0x1083f,\n        \"Cypriot Syllabary\"\n    ],\n    [\n        0x10840,\n        0x1085f,\n        \"Imperial Aramaic\"\n    ],\n    [\n        0x10860,\n        0x1087f,\n        \"Palmyrene\"\n    ],\n    [\n        0x10880,\n        0x108af,\n        \"Nabataean\"\n    ],\n    [\n        0x108e0,\n        0x108ff,\n        \"Hatran\"\n    ],\n    [\n        0x10900,\n        0x1091f,\n        \"Phoenician\"\n    ],\n    [\n        0x10920,\n        0x1093f,\n        \"Lydian\"\n    ],\n    [\n        0x10980,\n        0x1099f,\n        \"Meroitic Hieroglyphs\"\n    ],\n    [\n        0x109a0,\n        0x109ff,\n        \"Meroitic Cursive\"\n    ],\n    [\n        0x10a00,\n        0x10a5f,\n        \"Kharoshthi\"\n    ],\n    [\n        0x10a60,\n        0x10a7f,\n        \"Old South Arabian\"\n    ],\n    [\n        0x10a80,\n        0x10a9f,\n        \"Old North Arabian\"\n    ],\n    [\n        0x10ac0,\n        0x10aff,\n        \"Manichaean\"\n    ],\n    [\n        0x10b00,\n        0x10b3f,\n        \"Avestan\"\n    ],\n    [\n        0x10b40,\n        0x10b5f,\n        \"Inscriptional Parthian\"\n    ],\n    [\n        0x10b60,\n        0x10b7f,\n        \"Inscriptional Pahlavi\"\n    ],\n    [\n        0x10b80,\n        0x10baf,\n        \"Psalter Pahlavi\"\n    ],\n    [\n        0x10c00,\n        0x10c4f,\n        \"Old Turkic\"\n    ],\n    [\n        0x10c80,\n        0x10cff,\n        \"Old Hungarian\"\n    ],\n    [\n        0x10d00,\n        0x10d3f,\n        \"Hanifi Rohingya\"\n    ],\n    [\n        0x10e60,\n        0x10e7f,\n        \"Rumi Numeral Symbols\"\n    ],\n    [\n        0x10e80,\n        0x10ebf,\n        \"Yezidi\"\n    ],\n    [\n        0x10ec0,\n        0x10eff,\n        \"Arabic Extended-C\"\n    ],\n    [\n        0x10f00,\n        0x10f2f,\n        \"Old Sogdian\"\n    ],\n    [\n        0x10f30,\n        0x10f6f,\n        \"Sogdian\"\n    ],\n    [\n        0x10f70,\n        0x10faf,\n        \"Old Uyghur\"\n    ],\n    [\n        0x10fb0,\n        0x10fdf,\n        \"Chorasmian\"\n    ],\n    [\n        0x10fe0,\n        0x10fff,\n        \"Elymaic\"\n    ],\n    [\n        0x11000,\n        0x1107f,\n        \"Brahmi\"\n    ],\n    [\n        0x11080,\n        0x110cf,\n        \"Kaithi\"\n    ],\n    [\n        0x110d0,\n        0x110ff,\n        \"Sora Sompeng\"\n    ],\n    [\n        0x11100,\n        0x1114f,\n        \"Chakma\"\n    ],\n    [\n        0x11150,\n        0x1117f,\n        \"Mahajani\"\n    ],\n    [\n        0x11180,\n        0x111df,\n        \"Sharada\"\n    ],\n    [\n        0x111e0,\n        0x111ff,\n        \"Sinhala Archaic Numbers\"\n    ],\n    [\n        0x11200,\n        0x1124f,\n        \"Khojki\"\n    ],\n    [\n        0x11280,\n        0x112af,\n        \"Multani\"\n    ],\n    [\n        0x112b0,\n        0x112ff,\n        \"Khudawadi\"\n    ],\n    [\n        0x11300,\n        0x1137f,\n        \"Grantha\"\n    ],\n    [\n        0x11400,\n        0x1147f,\n        \"Newa\"\n    ],\n    [\n        0x11480,\n        0x114df,\n        \"Tirhuta\"\n    ],\n    [\n        0x11580,\n        0x115ff,\n        \"Siddham\"\n    ],\n    [\n        0x11600,\n        0x1165f,\n        \"Modi\"\n    ],\n    [\n        0x11660,\n        0x1167f,\n        \"Mongolian Supplement\"\n    ],\n    [\n        0x11680,\n        0x116cf,\n        \"Takri\"\n    ],\n    [\n        0x11700,\n        0x1174f,\n        \"Ahom\"\n    ],\n    [\n        0x11800,\n        0x1184f,\n        \"Dogra\"\n    ],\n    [\n        0x118a0,\n        0x118ff,\n        \"Warang Citi\"\n    ],\n    [\n        0x11900,\n        0x1195f,\n        \"Dives Akuru\"\n    ],\n    [\n        0x119a0,\n        0x119ff,\n        \"Nandinagari\"\n    ],\n    [\n        0x11a00,\n        0x11a4f,\n        \"Zanabazar Square\"\n    ],\n    [\n        0x11a50,\n        0x11aaf,\n        \"Soyombo\"\n    ],\n    [\n        0x11ab0,\n        0x11abf,\n        \"Unified Canadian Aboriginal Syllabics Extended-A\"\n    ],\n    [\n        0x11ac0,\n        0x11aff,\n        \"Pau Cin Hau\"\n    ],\n    [\n        0x11b00,\n        0x11b5f,\n        \"Devanagari Extended-A\"\n    ],\n    [\n        0x11c00,\n        0x11c6f,\n        \"Bhaiksuki\"\n    ],\n    [\n        0x11c70,\n        0x11cbf,\n        \"Marchen\"\n    ],\n    [\n        0x11d00,\n        0x11d5f,\n        \"Masaram Gondi\"\n    ],\n    [\n        0x11d60,\n        0x11daf,\n        \"Gunjala Gondi\"\n    ],\n    [\n        0x11ee0,\n        0x11eff,\n        \"Makasar\"\n    ],\n    [\n        0x11f00,\n        0x11f5f,\n        \"Kawi\"\n    ],\n    [\n        0x11fb0,\n        0x11fbf,\n        \"Lisu Supplement\"\n    ],\n    [\n        0x11fc0,\n        0x11fff,\n        \"Tamil Supplement\"\n    ],\n    [\n        0x12000,\n        0x123ff,\n        \"Cuneiform\"\n    ],\n    [\n        0x12400,\n        0x1247f,\n        \"Cuneiform Numbers and Punctuation\"\n    ],\n    [\n        0x12480,\n        0x1254f,\n        \"Early Dynastic Cuneiform\"\n    ],\n    [\n        0x12f90,\n        0x12fff,\n        \"Cypro-Minoan\"\n    ],\n    [\n        0x13000,\n        0x1342f,\n        \"Egyptian Hieroglyphs\"\n    ],\n    [\n        0x13430,\n        0x1345f,\n        \"Egyptian Hieroglyph Format Controls\"\n    ],\n    [\n        0x14400,\n        0x1467f,\n        \"Anatolian Hieroglyphs\"\n    ],\n    [\n        0x16800,\n        0x16a3f,\n        \"Bamum Supplement\"\n    ],\n    [\n        0x16a40,\n        0x16a6f,\n        \"Mro\"\n    ],\n    [\n        0x16a70,\n        0x16acf,\n        \"Tangsa\"\n    ],\n    [\n        0x16ad0,\n        0x16aff,\n        \"Bassa Vah\"\n    ],\n    [\n        0x16b00,\n        0x16b8f,\n        \"Pahawh Hmong\"\n    ],\n    [\n        0x16e40,\n        0x16e9f,\n        \"Medefaidrin\"\n    ],\n    [\n        0x16f00,\n        0x16f9f,\n        \"Miao\"\n    ],\n    [\n        0x16fe0,\n        0x16fff,\n        \"Ideographic Symbols and Punctuation\"\n    ],\n    [\n        0x17000,\n        0x187ff,\n        \"Tangut\"\n    ],\n    [\n        0x18800,\n        0x18aff,\n        \"Tangut Components\"\n    ],\n    [\n        0x18b00,\n        0x18cff,\n        \"Khitan Small Script\"\n    ],\n    [\n        0x18d00,\n        0x18d7f,\n        \"Tangut Supplement\"\n    ],\n    [\n        0x1aff0,\n        0x1afff,\n        \"Kana Extended-B\"\n    ],\n    [\n        0x1b000,\n        0x1b0ff,\n        \"Kana Supplement\"\n    ],\n    [\n        0x1b100,\n        0x1b12f,\n        \"Kana Extended-A\"\n    ],\n    [\n        0x1b130,\n        0x1b16f,\n        \"Small Kana Extension\"\n    ],\n    [\n        0x1b170,\n        0x1b2ff,\n        \"Nushu\"\n    ],\n    [\n        0x1bc00,\n        0x1bc9f,\n        \"Duployan\"\n    ],\n    [\n        0x1bca0,\n        0x1bcaf,\n        \"Shorthand Format Controls\"\n    ],\n    [\n        0x1cf00,\n        0x1cfcf,\n        \"Znamenny Musical Notation\"\n    ],\n    [\n        0x1d000,\n        0x1d0ff,\n        \"Byzantine Musical Symbols\"\n    ],\n    [\n        0x1d100,\n        0x1d1ff,\n        \"Musical Symbols\"\n    ],\n    [\n        0x1d200,\n        0x1d24f,\n        \"Ancient Greek Musical Notation\"\n    ],\n    [\n        0x1d2c0,\n        0x1d2df,\n        \"Kaktovik Numerals\"\n    ],\n    [\n        0x1d2e0,\n        0x1d2ff,\n        \"Mayan Numerals\"\n    ],\n    [\n        0x1d300,\n        0x1d35f,\n        \"Tai Xuan Jing Symbols\"\n    ],\n    [\n        0x1d360,\n        0x1d37f,\n        \"Counting Rod Numerals\"\n    ],\n    [\n        0x1d400,\n        0x1d7ff,\n        \"Mathematical Alphanumeric Symbols\"\n    ],\n    [\n        0x1d800,\n        0x1daaf,\n        \"Sutton SignWriting\"\n    ],\n    [\n        0x1df00,\n        0x1dfff,\n        \"Latin Extended-G\"\n    ],\n    [\n        0x1e000,\n        0x1e02f,\n        \"Glagolitic Supplement\"\n    ],\n    [\n        0x1e030,\n        0x1e08f,\n        \"Cyrillic Extended-D\"\n    ],\n    [\n        0x1e100,\n        0x1e14f,\n        \"Nyiakeng Puachue Hmong\"\n    ],\n    [\n        0x1e290,\n        0x1e2bf,\n        \"Toto\"\n    ],\n    [\n        0x1e2c0,\n        0x1e2ff,\n        \"Wancho\"\n    ],\n    [\n        0x1e4d0,\n        0x1e4ff,\n        \"Nag Mundari\"\n    ],\n    [\n        0x1e7e0,\n        0x1e7ff,\n        \"Ethiopic Extended-B\"\n    ],\n    [\n        0x1e800,\n        0x1e8df,\n        \"Mende Kikakui\"\n    ],\n    [\n        0x1e900,\n        0x1e95f,\n        \"Adlam\"\n    ],\n    [\n        0x1ec70,\n        0x1ecbf,\n        \"Indic Siyaq Numbers\"\n    ],\n    [\n        0x1ed00,\n        0x1ed4f,\n        \"Ottoman Siyaq Numbers\"\n    ],\n    [\n        0x1ee00,\n        0x1eeff,\n        \"Arabic Mathematical Alphabetic Symbols\"\n    ],\n    [\n        0x1f000,\n        0x1f02f,\n        \"Mahjong Tiles\"\n    ],\n    [\n        0x1f030,\n        0x1f09f,\n        \"Domino Tiles\"\n    ],\n    [\n        0x1f0a0,\n        0x1f0ff,\n        \"Playing Cards\"\n    ],\n    [\n        0x1f100,\n        0x1f1ff,\n        \"Enclosed Alphanumeric Supplement\"\n    ],\n    [\n        0x1f200,\n        0x1f2ff,\n        \"Enclosed Ideographic Supplement\"\n    ],\n    [\n        0x1f300,\n        0x1f5ff,\n        \"Miscellaneous Symbols and Pictographs\"\n    ],\n    [\n        0x1f600,\n        0x1f64f,\n        \"Emoticons\"\n    ],\n    [\n        0x1f650,\n        0x1f67f,\n        \"Ornamental Dingbats\"\n    ],\n    [\n        0x1f680,\n        0x1f6ff,\n        \"Transport and Map Symbols\"\n    ],\n    [\n        0x1f700,\n        0x1f77f,\n        \"Alchemical Symbols\"\n    ],\n    [\n        0x1f780,\n        0x1f7ff,\n        \"Geometric Shapes Extended\"\n    ],\n    [\n        0x1f800,\n        0x1f8ff,\n        \"Supplemental Arrows-C\"\n    ],\n    [\n        0x1f900,\n        0x1f9ff,\n        \"Supplemental Symbols and Pictographs\"\n    ],\n    [\n        0x1fa00,\n        0x1fa6f,\n        \"Chess Symbols\"\n    ],\n    [\n        0x1fa70,\n        0x1faff,\n        \"Symbols and Pictographs Extended-A\"\n    ],\n    [\n        0x1fb00,\n        0x1fbff,\n        \"Symbols for Legacy Computing\"\n    ],\n    [\n        0x20000,\n        0x2a6df,\n        \"CJK Unified Ideographs Extension B\"\n    ],\n    [\n        0x2a700,\n        0x2b73f,\n        \"CJK Unified Ideographs Extension C\"\n    ],\n    [\n        0x2b740,\n        0x2b81f,\n        \"CJK Unified Ideographs Extension D\"\n    ],\n    [\n        0x2b820,\n        0x2ceaf,\n        \"CJK Unified Ideographs Extension E\"\n    ],\n    [\n        0x2ceb0,\n        0x2ebef,\n        \"CJK Unified Ideographs Extension F\"\n    ],\n    [\n        0x2ebf0,\n        0x2ee5f,\n        \"CJK Unified Ideographs Extension I\"\n    ],\n    [\n        0x2f800,\n        0x2fa1f,\n        \"CJK Compatibility Ideographs Supplement\"\n    ],\n    [\n        0x30000,\n        0x3134f,\n        \"CJK Unified Ideographs Extension G\"\n    ],\n    [\n        0x31350,\n        0x323af,\n        \"CJK Unified Ideographs Extension H\"\n    ],\n    [\n        0xe0000,\n        0xe007f,\n        \"Tags\"\n    ],\n    [\n        0xe0100,\n        0xe01ef,\n        \"Variation Selectors Supplement\"\n    ],\n    [\n        0xf0000,\n        0xfffff,\n        \"Supplementary Private Use Area-A\"\n    ],\n    [\n        0x100000,\n        0x10ffff,\n        \"Supplementary Private Use Area-B\"\n    ]\n];\nfunction getUnicodeBlock(input, blocks = UNICODE_BLOCKS) {\n    const sanitized = typeof input === \"string\" ? input : \"\";\n    return sanitized.split(\"\").map((char)=>{\n        const code = char.charCodeAt(0);\n        if (code === undefined) {\n            return {\n                char,\n                block: \"Unknown\"\n            };\n        }\n        const block = blocks.find(([start, end])=>code >= start && code <= end);\n        if (block === undefined) {\n            return {\n                char,\n                block: \"Unknown\"\n            };\n        }\n        return {\n            char,\n            block: block[2]\n        };\n    });\n}\nfunction getReducedUnicodeBlocks(blockNames) {\n    if (typeof blockNames === \"string\") {\n        return UNICODE_BLOCKS.filter((block)=>block[2].includes(blockNames));\n    }\n    return UNICODE_BLOCKS.filter((block)=>blockNames.some((name)=>block[2].includes(name)));\n}\nfunction isInBlock(blockNames) {\n    return (input)=>{\n        if (typeof input !== \"string\") {\n            return false;\n        }\n        if (input.length < 1) {\n            return false;\n        }\n        return getUnicodeBlock(input, getReducedUnicodeBlocks(blockNames)).every((v)=>v.block !== \"Unknown\");\n    };\n}\n\n// Inspired by https://github.com/e-/Hangul.js\nconst CHO = [\n    \"ㄱ\",\n    \"ㄲ\",\n    \"ㄴ\",\n    \"ㄷ\",\n    \"ㄸ\",\n    \"ㄹ\",\n    \"ㅁ\",\n    \"ㅂ\",\n    \"ㅃ\",\n    \"ㅅ\",\n    \"ㅆ\",\n    \"ㅇ\",\n    \"ㅈ\",\n    \"ㅉ\",\n    \"ㅊ\",\n    \"ㅋ\",\n    \"ㅌ\",\n    \"ㅍ\",\n    \"ㅎ\"\n];\n/* Disassembled 중성(nucleus) */ const JUNG = [\n    \"ㅏ\",\n    \"ㅐ\",\n    \"ㅑ\",\n    \"ㅒ\",\n    \"ㅓ\",\n    \"ㅔ\",\n    \"ㅕ\",\n    \"ㅖ\",\n    \"ㅗ\",\n    [\n        \"ㅘ\",\n        \"ㅗ\",\n        \"ㅏ\"\n    ],\n    [\n        \"ㅙ\",\n        \"ㅗ\",\n        \"ㅐ\"\n    ],\n    [\n        \"ㅚ\",\n        \"ㅗ\",\n        \"ㅣ\"\n    ],\n    \"ㅛ\",\n    \"ㅜ\",\n    [\n        \"ㅝ\",\n        \"ㅜ\",\n        \"ㅓ\"\n    ],\n    [\n        \"ㅞ\",\n        \"ㅜ\",\n        \"ㅔ\"\n    ],\n    [\n        \"ㅟ\",\n        \"ㅜ\",\n        \"ㅣ\"\n    ],\n    \"ㅠ\",\n    \"ㅡ\",\n    [\n        \"ㅢ\",\n        \"ㅡ\",\n        \"ㅣ\"\n    ],\n    \"ㅣ\"\n];\n/* Desassembled 종성(coda) */ const JONG = [\n    \"\",\n    \"ㄱ\",\n    \"ㄲ\",\n    [\n        \"ㄳ\",\n        \"ㄱ\",\n        \"ㅅ\"\n    ],\n    \"ㄴ\",\n    [\n        \"ㄵ\",\n        \"ㄴ\",\n        \"ㅈ\"\n    ],\n    [\n        \"ㄶ\",\n        \"ㄴ\",\n        \"ㅎ\"\n    ],\n    \"ㄷ\",\n    \"ㄹ\",\n    [\n        \"ㄺ\",\n        \"ㄹ\",\n        \"ㄱ\"\n    ],\n    [\n        \"ㄻ\",\n        \"ㄹ\",\n        \"ㅁ\"\n    ],\n    [\n        \"ㄼ\",\n        \"ㄹ\",\n        \"ㅂ\"\n    ],\n    [\n        \"ㄽ\",\n        \"ㄹ\",\n        \"ㅅ\"\n    ],\n    [\n        \"ㄾ\",\n        \"ㄹ\",\n        \"ㅌ\"\n    ],\n    [\n        \"ㄿ\",\n        \"ㄹ\",\n        \"ㅍ\"\n    ],\n    [\n        \"ㅀ\",\n        \"ㄹ\",\n        \"ㅎ\"\n    ],\n    \"ㅁ\",\n    \"ㅂ\",\n    [\n        \"ㅄ\",\n        \"ㅂ\",\n        \"ㅅ\"\n    ],\n    \"ㅅ\",\n    \"ㅆ\",\n    \"ㅇ\",\n    \"ㅈ\",\n    \"ㅊ\",\n    \"ㅋ\",\n    \"ㅌ\",\n    \"ㅍ\",\n    \"ㅎ\"\n];\n/* 유니코드 한글 (Hangul Syllables) 시작 위치 */ const HANGUL_OFFSET = 0xac00;\n/* 복잡한 자음: [ 자음1+자음2, 자음1, 자음2  ] */ /* 복잡한 모음: [모음1+모음2, 모음1, 모음2] */ const COMPLEX_CONSONANTS = [\n    [\n        \"ㄳ\",\n        \"ㄱ\",\n        \"ㅅ\"\n    ],\n    [\n        \"ㄵ\",\n        \"ㄴ\",\n        \"ㅈ\"\n    ],\n    [\n        \"ㄶ\",\n        \"ㄴ\",\n        \"ㅎ\"\n    ],\n    [\n        \"ㄺ\",\n        \"ㄹ\",\n        \"ㄱ\"\n    ],\n    [\n        \"ㄻ\",\n        \"ㄹ\",\n        \"ㅁ\"\n    ],\n    [\n        \"ㄼ\",\n        \"ㄹ\",\n        \"ㅂ\"\n    ],\n    [\n        \"ㄽ\",\n        \"ㄹ\",\n        \"ㅅ\"\n    ],\n    [\n        \"ㄾ\",\n        \"ㄹ\",\n        \"ㅌ\"\n    ],\n    [\n        \"ㄿ\",\n        \"ㄹ\",\n        \"ㅍ\"\n    ],\n    [\n        \"ㅀ\",\n        \"ㄹ\",\n        \"ㅎ\"\n    ],\n    [\n        \"ㅄ\",\n        \"ㅂ\",\n        \"ㅅ\"\n    ]\n];\nconst COMPLEX_VOWELS = [\n    [\n        \"ㅘ\",\n        \"ㅗ\",\n        \"ㅏ\"\n    ],\n    [\n        \"ㅙ\",\n        \"ㅗ\",\n        \"ㅐ\"\n    ],\n    [\n        \"ㅚ\",\n        \"ㅗ\",\n        \"ㅣ\"\n    ],\n    [\n        \"ㅝ\",\n        \"ㅜ\",\n        \"ㅓ\"\n    ],\n    [\n        \"ㅞ\",\n        \"ㅜ\",\n        \"ㅔ\"\n    ],\n    [\n        \"ㅟ\",\n        \"ㅜ\",\n        \"ㅣ\"\n    ],\n    [\n        \"ㅢ\",\n        \"ㅡ\",\n        \"ㅣ\"\n    ]\n];\nconst COMPLEXES = [\n    ...COMPLEX_CONSONANTS,\n    ...COMPLEX_VOWELS\n];\nfunction getFromTable(table, index) {\n    const selected = table[index];\n    if (Array.isArray(selected)) {\n        return selected[0];\n    }\n    return selected;\n}\nfunction removeJungAndJong(input) {\n    if (input.length !== 1) {\n        throw new Error(\"Input must be a single character.\");\n    }\n    const unicode = input.charCodeAt(0);\n    if (isInBlock(\"Hangul Syllables\")(input)) {\n        const code = unicode - HANGUL_OFFSET;\n        const jong = code % 28;\n        const jung = Math.floor((code - jong) / 28) % 21;\n        return String.fromCharCode(unicode - jong - jung * 28);\n    }\n    return input;\n}\nfunction removeJong(input) {\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string.\");\n    }\n    if (input.length !== 1) {\n        throw new Error(\"Input must be a single character.\");\n    }\n    const unicode = input.charCodeAt(0);\n    if (isInBlock(\"Hangul Syllables\")(input)) {\n        const code = unicode - HANGUL_OFFSET;\n        const jong = code % 28;\n        return String.fromCharCode(unicode - jong);\n    }\n    return input;\n}\nfunction excerptJung(input) {\n    const sanitized = typeof input !== \"string\" ? \"\" : input.length > 1 ? input[0] : input;\n    const unicode = sanitized.charCodeAt(0);\n    if (isInBlock(\"Hangul Syllables\")(sanitized)) {\n        const code = unicode - HANGUL_OFFSET;\n        const jung = Math.floor((code - code % 28) / 28) % 21;\n        return typeof JUNG[jung] === \"string\" ? JUNG[jung] : JUNG[jung][0];\n    }\n    return \"\";\n}\nfunction excerptJong(input) {\n    const sanitized = typeof input !== \"string\" ? \"\" : input.length > 1 ? input[0] : input;\n    const unicode = sanitized.charCodeAt(0);\n    if (isInBlock(\"Hangul Syllables\")(sanitized)) {\n        const code = unicode - HANGUL_OFFSET;\n        const jong = code % 28;\n        return typeof JONG[jong] === \"string\" ? JONG[jong] : JONG[jong][0];\n    }\n    return \"\";\n}\nfunction isHangul(input) {\n    return getUnicodeBlock(input, getReducedUnicodeBlocks(\"Hangul\")).every((v)=>v.block !== \"Unknown\");\n}\nfunction decomposeHangul(singleChar) {\n    if (singleChar.length !== 1) {\n        throw new Error(\"Input must be a single character.\");\n    }\n    const unicode = singleChar.charCodeAt(0);\n    // 완성형 한글 11172자 = 19 × 21 × (27 +1) = 11172\n    // 참고: https://namu.wiki/w/%ED%98%84%EB%8C%80%20%ED%95%9C%EA%B8%80%EC%9D%98%20%EB%AA%A8%EB%93%A0%20%EA%B8%80%EC%9E%90\n    if (isInBlock(\"Hangul Syllables\")(singleChar)) {\n        const code = unicode - HANGUL_OFFSET;\n        const jong = code % 28;\n        const jung = Math.floor((code - jong) / 28) % 21;\n        const cho = Math.floor((code - jong) / 28 / 21);\n        return [\n            CHO[cho],\n            getFromTable(JUNG, jung),\n            getFromTable(JONG, jong)\n        ].filter((v)=>v !== \"\" && typeof v === \"string\").flatMap((v)=>decomposeHangul(v));\n    }\n    if (isInBlock([\n        \"Hangul Jamo\",\n        \"Hangul Compatibility Jamo\",\n        \"Hangul Jamo Extended-A\",\n        \"Hangul Jamo Extended-B\"\n    ])(singleChar)) {\n        const complex = COMPLEXES.find((v)=>v[0] === singleChar);\n        return complex ? [\n            ...complex.slice(1)\n        ] : [\n            singleChar\n        ];\n    }\n    return [\n        singleChar\n    ];\n}\nfunction combineHangul(input) {\n    return input.reduce((acc, cur, index)=>{\n        // if the cur is not hangul, add and skip\n        if (!isHangul(cur)) {\n            return {\n                ...acc,\n                result: [\n                    ...acc.result,\n                    cur\n                ],\n                last: cur,\n                index\n            };\n        }\n        const typed = acc.result[acc.result.length - 1];\n        if (typeof typed !== \"string\") {\n            return {\n                ...acc,\n                result: [\n                    ...acc.result,\n                    cur\n                ],\n                last: cur,\n                index\n            };\n        }\n        // (자음 + 단/복모음 + 단자음) + 단자음 => 한글자\n        if (isInBlock(\"Hangul Syllables\")(typed) && JONG.findIndex((v)=>v[1] === excerptJong(typed) && v[2] === cur) > -1) {\n            const code = removeJong(typed).charCodeAt(0);\n            const complexIndex = JONG.findIndex((v)=>typeof v !== \"string\" && v[1] === excerptJong(typed) && v[2] === cur);\n            const result = String.fromCharCode(code + complexIndex);\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    result\n                ],\n                last: cur,\n                index\n            };\n        }\n        // (자음 + 모음 + 단자음) + 모음 => 두글자\n        if (isInBlock(\"Hangul Syllables\")(typed) && (typed.charCodeAt(0) - HANGUL_OFFSET) % 28 !== 0 && JONG.findIndex((v)=>typeof v !== \"string\" && v[0] === excerptJong(typed)) === -1 && JUNG.includes(cur)) {\n            const jongRemoved = removeJong(typed);\n            const jong = excerptJong(typed);\n            const choIndex = CHO.indexOf(jong);\n            const jungIndex = JUNG.indexOf(cur);\n            const result = String.fromCharCode(HANGUL_OFFSET + choIndex * 21 * 28 + jungIndex * 28);\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    jongRemoved,\n                    result\n                ],\n                last: cur,\n                index\n            };\n        }\n        // (자음 + 모음 + 복자음) + 모음 => 두글자\n        if (isInBlock(\"Hangul Syllables\")(typed) && (typed.charCodeAt(0) - HANGUL_OFFSET) % 28 !== 0 && JONG.findIndex((v)=>typeof v !== \"string\" && v[0] === excerptJong(typed)) > -1 && JUNG.includes(cur)) {\n            const jongRemoved = removeJong(typed);\n            const jong = excerptJong(typed);\n            const combinedIndex = JONG.findIndex((v)=>typeof v !== \"string\" && v[0] === jong);\n            const [_, badchim, choseong] = JONG[combinedIndex];\n            const badchimIndex = JONG.indexOf(badchim);\n            const choIndex = CHO.indexOf(choseong);\n            const jungIndex = JUNG.indexOf(cur);\n            const prev = String.fromCharCode(jongRemoved.charCodeAt(0) + badchimIndex);\n            const next = String.fromCharCode(HANGUL_OFFSET + choIndex * 21 * 28 + jungIndex * 28);\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    prev,\n                    next\n                ],\n                last: cur,\n                index\n            };\n        }\n        // (자음 + 모음) + 모음 => (자음 + 복모음)\n        const maybeComplexVowelIndex = JUNG.findIndex((v)=>typeof v !== \"string\" && v[1] === excerptJung(typed) && v[2] === cur);\n        if (isInBlock(\"Hangul Syllables\")(typed) && (typed.charCodeAt(0) - HANGUL_OFFSET) % 28 === 0 && maybeComplexVowelIndex > -1) {\n            const choCode = Math.floor((typed.charCodeAt(0) - HANGUL_OFFSET) / (28 * 21)) * (28 * 21) + HANGUL_OFFSET; // 자음 + ㅏ 위치 찾기\n            const result = String.fromCharCode(choCode + maybeComplexVowelIndex * 28);\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    result\n                ],\n                last: cur,\n                index\n            };\n        }\n        // (자음 + 단/복모음) + 자음 => 한글자\n        if (isInBlock(\"Hangul Syllables\")(typed) && (typed.charCodeAt(0) - HANGUL_OFFSET) % 28 === 0 && // (초성 + 중성)\n        JONG.includes(cur)) {\n            const result = String.fromCharCode(typed.charCodeAt(0) + JONG.indexOf(cur));\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    result\n                ],\n                last: cur,\n                index\n            };\n        }\n        // 자음 + 단모음\n        if (CHO.includes(typed) && JUNG.includes(cur)) {\n            const choIndex = CHO.indexOf(typed);\n            const jungIndex = JUNG.indexOf(cur);\n            const result = String.fromCharCode(HANGUL_OFFSET + choIndex * 21 * 28 + jungIndex * 28);\n            return {\n                ...acc,\n                result: [\n                    ...acc.result.slice(0, acc.result.length - 1),\n                    result\n                ],\n                last: cur,\n                index\n            };\n        }\n        return {\n            ...acc,\n            result: [\n                ...acc.result,\n                cur\n            ],\n            last: cur,\n            index\n        };\n    }, {\n        input,\n        result: [],\n        last: \"\",\n        index: -1\n    }).result.join(\"\");\n}\n// Inspired by es-hangul, TOSS\nfunction chosungIncludes(target, chosung) {\n    if (chosung.length > target.length) {\n        return false;\n    }\n    const targetOnlyHangul = target.split(\"\").filter((c)=>isHangul(c)).join(\"\");\n    const chosungOnlyHangul = chosung.split(\"\").filter((c)=>isHangul(c)).join(\"\");\n    const chosungDecomposed = decompose(chosungOnlyHangul, \"detail\");\n    if (chosungDecomposed.length !== chosung.length) {\n        return false;\n    }\n    const chosungArr = chosungDecomposed.reduce((acc, cur)=>{\n        if (cur.decomposedIndex === 0) {\n            return [\n                ...acc,\n                cur.decomposedAtIndex\n            ];\n        }\n        return acc;\n    }, []);\n    const result = decompose(targetOnlyHangul, \"detail\").reduce((acc, _cur, index, arr)=>{\n        if (acc) {\n            return true;\n        }\n        if (index + chosungArr.length > arr.length) {\n            return false;\n        }\n        const ahead = arr.filter((v)=>v.decomposedIndex === 0).slice(index, index + chosungArr.length).map((v)=>v);\n        if (ahead.length === 0) {\n            return false;\n        }\n        if (ahead.length > 0 && ahead.every((v, i)=>v.decomposedAtIndex === chosungArr[i])) {\n            return true;\n        }\n        return acc;\n    }, false);\n    return result;\n}\nfunction josa(word, josa) {\n    const lastChar = word[word.length - 1];\n    const lastCharDecomposed = decompose(lastChar, \"detail\");\n    if (lastCharDecomposed.length === 0) {\n        return word;\n    }\n    const lastCharJong = lastCharDecomposed[lastCharDecomposed.length - 1];\n    if (CHO.includes(lastCharJong.decomposedAtIndex)) {\n        return word + josa.split(\"/\")[0];\n    }\n    return word + josa.split(\"/\")[1];\n}\n\nfunction simpleDecompose(input) {\n    return input.split(\"\").flatMap((c)=>{\n        if (c === \" \") {\n            return [\n                \" \"\n            ];\n        }\n        // if c is Hangul, decompose again with hangulSimpleDecompose function\n        if (isHangul(c)) {\n            return decomposeHangul(c);\n        }\n        // NFKD is a Unicode normalization form that decomposes characters;\n        // NOT RECOMMENDED.\n        return c.normalize(\"NFKD\").split(\"\");\n    });\n}\nfunction decompose(input, mode = \"detail\") {\n    if (mode === \"simple\") {\n        return simpleDecompose(input);\n    }\n    const result = input.split(\"\").map((char, charIndex, arr)=>({\n            wordBeforeCharIndex: arr.slice(0, charIndex).join(\"\"),\n            char,\n            charIndex,\n            decomposedSingle: simpleDecompose(char)\n        })).flatMap((detail)=>detail.decomposedSingle.map((v, i)=>({\n                ...detail,\n                currentWord: input,\n                flatIndex: 0,\n                decomposedAtIndex: v,\n                decomposedIndex: i\n            }))).map((v, i)=>({\n            ...v,\n            flatIndex: i\n        }));\n    return result;\n}\n\nfunction combine(input) {\n    if (input.some((char)=>isInBlock(\"Hangul\")(char))) {\n        return combineHangul(input);\n    }\n    return input;\n}\n\nexport { chosungIncludes, combine, combineHangul, decompose, decomposeHangul, excerptJong, excerptJung, isHangul, josa, removeJong, removeJungAndJong };\n//# sourceMappingURL=index.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//@ts-ignore\nimport { createRoot } from 'react-dom';\n\nimport TypeWriter from \"./Typewriter\";\n\nwindow.addEventListener(\n\t'load',\n\tfunction () {\n\t\tdocument\n\t\t\t.querySelectorAll(\n\t\t\t\t'.wp-block-create-block-k-typewriter .typewriter-container'\n\t\t\t)\n\t\t\t.forEach((blockDomElement) => {\n\t\t\t\tconst attributes = JSON.parse(\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tblockDomElement.dataset.gutenbergAttributes\n\t\t\t\t);\n\n\t\t\t\tconst root = createRoot(blockDomElement);\n\t\t\t\troot.render(<TypeWriter texts={attributes.testToggle ? attributes.texts : [attributes.text]}\n\t\t\t\t\tpauseDelay={1000}\n\t\t\t\t\ttypeDelay={50}\n\t\t\t\t\tdeleteDelay={30}\n\t\t\t\t/>);\n\t\t\t});\n\t},\n\tfalse\n);"],"names":["useUniTyper","TypeWriter","props","displayedText","state","createElement","Fragment","React","decompose","combine","initialTypeWriterState","disassembledText","flatIndex","isForwarding","updateStateForwarding","prev","nextFlatIndex","nextIsForwarding","length","updateStateBackwarding","Math","max","texts","pauseDelay","typeDelay","deleteDelay","textIndex","setTextIndex","useState","index","text","useMemo","setState","delay","fullFlatLength","flat","nextIndex","isLastCharacter","prevIndex","isFirstCharacter","useEffect","timeout","setTimeout","next","clearTimeout","slice","map","v","decomposedAtIndex","createRoot","window","addEventListener","document","querySelectorAll","forEach","blockDomElement","attributes","JSON","parse","dataset","gutenbergAttributes","root","render","testToggle"],"sourceRoot":""}